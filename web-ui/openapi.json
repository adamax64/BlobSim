{
  "openapi": "3.1.0",
  "info": {
    "title": "Blob Championship System API",
    "version": "0.1.0"
  },
  "paths": {
    "/sim_data/sim_time": {
      "get": {
        "tags": [
          "sim_data"
        ],
        "summary": "Get Sim Time",
        "operationId": "get_sim_time_sim_data_sim_time_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTimeDto"
                }
              }
            }
          }
        }
      }
    },
    "/sim_data/simulate": {
      "post": {
        "tags": [
          "sim_data"
        ],
        "summary": "Progress",
        "description": "Simulate the progress of the simulation and update blobs.",
        "operationId": "progress_sim_data_simulate_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/general-infos/news": {
      "get": {
        "tags": [
          "general-infos"
        ],
        "summary": "Get News",
        "operationId": "get_news_general_infos_news_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/News"
                  },
                  "type": "array",
                  "title": "Response Get News General Infos News Get"
                }
              }
            }
          }
        }
      }
    },
    "/blobs/all": {
      "get": {
        "tags": [
          "blobs"
        ],
        "summary": "Get All",
        "operationId": "get_all_blobs_all_get",
        "parameters": [
          {
            "name": "name_search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Search"
            }
          },
          {
            "name": "show_dead",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Show Dead"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlobStatsDto"
                  },
                  "title": "Response Get All Blobs All Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/blobs/create": {
      "post": {
        "tags": [
          "blobs"
        ],
        "summary": "Create Blob",
        "operationId": "create_blob_blobs_create_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "first_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "First Name"
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Last Name"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/factory/progress": {
      "get": {
        "tags": [
          "factory"
        ],
        "summary": "Get Factory Progress",
        "operationId": "get_factory_progress_factory_progress_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "title": "Response Get Factory Progress Factory Progress Get"
                }
              }
            }
          }
        }
      }
    },
    "/factory/name-suggestions": {
      "get": {
        "tags": [
          "factory"
        ],
        "summary": "Get Name Suggestions",
        "operationId": "get_name_suggestions_factory_name_suggestions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NameSuggestionDto"
                  },
                  "type": "array",
                  "title": "Response Get Name Suggestions Factory Name Suggestions Get"
                }
              }
            }
          }
        }
      }
    },
    "/factory/save-name-suggestion": {
      "post": {
        "tags": [
          "factory"
        ],
        "summary": "Save Name Suggestion",
        "operationId": "save_name_suggestion_factory_save_name_suggestion_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "first_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "First Name"
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Last Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/factory/update-name-suggestion": {
      "post": {
        "tags": [
          "factory"
        ],
        "summary": "Update Name Suggestion",
        "description": "Updates the first name of a child name suggestion",
        "operationId": "update_name_suggestion_factory_update_name_suggestion_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "first_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "First Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/leagues/all": {
      "get": {
        "tags": [
          "Leagues",
          "Leagues"
        ],
        "summary": "Get Leagues",
        "description": "Fetch all leagues excluding the queue.",
        "operationId": "get_leagues_leagues_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LeagueDto"
                  },
                  "type": "array",
                  "title": "Response Get Leagues Leagues All Get"
                }
              }
            }
          }
        }
      }
    },
    "/standings/championship/{league_id}/{season}": {
      "get": {
        "tags": [
          "Standings"
        ],
        "summary": "Get Standings By League And Season",
        "description": "Fetch standings by league id and season.",
        "operationId": "get_standings_by_league_and_season_standings_championship__league_id___season__get",
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "League Id"
            }
          },
          {
            "name": "season",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Season"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StandingsDTO"
                  },
                  "title": "Response Get Standings By League And Season Standings Championship  League Id   Season  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/standings/grandmaster/{start_season}": {
      "get": {
        "tags": [
          "Standings"
        ],
        "summary": "Get Grandmaster Standings By Eon",
        "description": "Fetch grandmaster standings by starting season of eon.",
        "operationId": "get_grandmaster_standings_by_eon_standings_grandmaster__start_season__get",
        "parameters": [
          {
            "name": "start_season",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Start Season"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrandmasterStandingsDTO"
                  },
                  "title": "Response Get Grandmaster Standings By Eon Standings Grandmaster  Start Season  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/competition/current": {
      "get": {
        "tags": [
          "competition"
        ],
        "summary": "Get Current Event",
        "operationId": "get_current_event_competition_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            }
          }
        }
      }
    },
    "/competition/quartered-event-results": {
      "post": {
        "tags": [
          "competition"
        ],
        "summary": "Save Quartered",
        "description": "Save event results for quartered events.",
        "operationId": "save_quartered_competition_quartered_event_results_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_save_quartered_competition_quartered_event_results_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/competition/race-event-results": {
      "post": {
        "tags": [
          "competition"
        ],
        "summary": "Save Race",
        "description": "Save event results for race events.",
        "operationId": "save_race_competition_race_event_results_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_save_race_competition_race_event_results_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/actions/create/quartered": {
      "post": {
        "tags": [
          "actions"
        ],
        "summary": "Quartered",
        "description": "Generate score for contender and save the action for given event.",
        "operationId": "quartered_actions_create_quartered_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "tick",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tick"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlobCompetitorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/actions/create/race": {
      "post": {
        "tags": [
          "actions"
        ],
        "summary": "Race",
        "description": "Generate score for all contenders and save the actions for given event.",
        "operationId": "race_actions_create_race_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "tick",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tick"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/event-records/quartered": {
      "get": {
        "tags": [
          "event-records"
        ],
        "summary": "Get Quartered",
        "description": "Get quartered event records by actions.",
        "operationId": "get_quartered_event_records_quartered_get",
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuarteredEventRecordDto"
                  },
                  "title": "Response Get Quartered Event Records Quartered Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/event-records/race": {
      "get": {
        "tags": [
          "event-records"
        ],
        "summary": "Get Race",
        "description": "Get race event records by actions.",
        "operationId": "get_race_event_records_race_get",
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "is_playback",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Is Playback"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RaceEventRecordDto"
                  },
                  "title": "Response Get Race Event Records Race Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/calendar": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Get Season Calendar",
        "description": "Get the season calendar.",
        "operationId": "get_season_calendar_calendar_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CalendarDto"
                  },
                  "type": "array",
                  "title": "Response Get Season Calendar Calendar Get"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/validate": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Validate Token",
        "operationId": "validate_token_auth_validate_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ActionDto": {
        "properties": {
          "tick": {
            "type": "integer",
            "title": "Tick"
          },
          "blob_id": {
            "type": "integer",
            "title": "Blob Id"
          },
          "score": {
            "type": "number",
            "title": "Score"
          }
        },
        "type": "object",
        "required": [
          "tick",
          "blob_id",
          "score"
        ],
        "title": "ActionDto"
      },
      "BlobCompetitorDto": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "strength": {
            "type": "number",
            "title": "Strength"
          },
          "color": {
            "type": "string",
            "title": "Color"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "strength",
          "color"
        ],
        "title": "BlobCompetitorDto"
      },
      "BlobStatsDto": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "born": {
            "type": "string",
            "title": "Born"
          },
          "debut": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Debut"
          },
          "contract": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contract"
          },
          "podiums": {
            "type": "integer",
            "title": "Podiums"
          },
          "wins": {
            "type": "integer",
            "title": "Wins"
          },
          "championships": {
            "type": "integer",
            "title": "Championships"
          },
          "grandmasters": {
            "type": "integer",
            "title": "Grandmasters"
          },
          "league_name": {
            "type": "string",
            "title": "League Name"
          },
          "at_risk": {
            "type": "boolean",
            "title": "At Risk",
            "default": false
          },
          "is_dead": {
            "type": "boolean",
            "title": "Is Dead",
            "default": false
          },
          "is_retired": {
            "type": "boolean",
            "title": "Is Retired",
            "default": false
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParentDto"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "born",
          "podiums",
          "wins",
          "championships",
          "grandmasters",
          "league_name",
          "color"
        ],
        "title": "BlobStatsDto"
      },
      "Body_save_quartered_competition_quartered_event_results_post": {
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventDto"
          },
          "event_records": {
            "items": {
              "$ref": "#/components/schemas/QuarteredEventRecordDto"
            },
            "type": "array",
            "title": "Event Records"
          }
        },
        "type": "object",
        "required": [
          "event",
          "event_records"
        ],
        "title": "Body_save_quartered_competition_quartered_event_results_post"
      },
      "Body_save_race_competition_race_event_results_post": {
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventDto"
          },
          "event_records": {
            "items": {
              "$ref": "#/components/schemas/RaceEventRecordDto"
            },
            "type": "array",
            "title": "Event Records"
          }
        },
        "type": "object",
        "required": [
          "event",
          "event_records"
        ],
        "title": "Body_save_race_competition_race_event_results_post"
      },
      "CalendarDto": {
        "properties": {
          "date": {
            "$ref": "#/components/schemas/SimTimeDto"
          },
          "league_name": {
            "type": "string",
            "title": "League Name"
          },
          "league_level": {
            "type": "integer",
            "title": "League Level"
          },
          "round": {
            "type": "integer",
            "title": "Round"
          },
          "is_concluded": {
            "type": "boolean",
            "title": "Is Concluded"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "is_next": {
            "type": "boolean",
            "title": "Is Next"
          },
          "is_current": {
            "type": "boolean",
            "title": "Is Current"
          }
        },
        "type": "object",
        "required": [
          "date",
          "league_name",
          "league_level",
          "round",
          "is_concluded",
          "event_type",
          "is_next",
          "is_current"
        ],
        "title": "CalendarDto"
      },
      "EventDto": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "competitors": {
            "items": {
              "$ref": "#/components/schemas/BlobCompetitorDto"
            },
            "type": "array",
            "title": "Competitors"
          },
          "actions": {
            "items": {
              "$ref": "#/components/schemas/ActionDto"
            },
            "type": "array",
            "title": "Actions"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueDto"
          },
          "season": {
            "type": "integer",
            "title": "Season"
          },
          "round": {
            "type": "integer",
            "title": "Round"
          },
          "type": {
            "$ref": "#/components/schemas/EventType"
          }
        },
        "type": "object",
        "required": [
          "id",
          "competitors",
          "actions",
          "league",
          "season",
          "round",
          "type"
        ],
        "title": "EventDto"
      },
      "EventSummaryDTO": {
        "properties": {
          "event_name": {
            "type": "string",
            "title": "Event Name"
          },
          "winner": {
            "type": "string",
            "title": "Winner"
          },
          "runner_up": {
            "type": "string",
            "title": "Runner Up"
          },
          "third_place": {
            "type": "string",
            "title": "Third Place"
          }
        },
        "type": "object",
        "required": [
          "event_name",
          "winner",
          "runner_up",
          "third_place"
        ],
        "title": "EventSummaryDTO"
      },
      "EventType": {
        "type": "string",
        "enum": [
          "QUARTERED_ONE_SHOT_SCORING",
          "QUARTERED_TWO_SHOT_SCORING",
          "ENDURANCE_RACE"
        ],
        "title": "EventType"
      },
      "GrandmasterStandingsDTO": {
        "properties": {
          "blob_id": {
            "type": "integer",
            "title": "Blob Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "championships": {
            "type": "integer",
            "title": "Championships"
          },
          "gold": {
            "type": "integer",
            "title": "Gold"
          },
          "silver": {
            "type": "integer",
            "title": "Silver"
          },
          "bronze": {
            "type": "integer",
            "title": "Bronze"
          },
          "points": {
            "type": "integer",
            "title": "Points"
          }
        },
        "type": "object",
        "required": [
          "blob_id",
          "name",
          "color",
          "championships",
          "gold",
          "silver",
          "bronze",
          "points"
        ],
        "title": "GrandmasterStandingsDTO"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LeagueDto": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "field_size": {
            "type": "integer",
            "title": "Field Size"
          },
          "level": {
            "type": "integer",
            "title": "Level"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "field_size",
          "level"
        ],
        "title": "LeagueDto"
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest"
      },
      "NameSuggestionDto": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "last_name",
          "created"
        ],
        "title": "NameSuggestionDto"
      },
      "News": {
        "properties": {
          "news_type": {
            "$ref": "#/components/schemas/NewsType"
          },
          "blob_info": {
            "type": "string",
            "title": "Blob Info"
          },
          "event_summary": {
            "$ref": "#/components/schemas/EventSummaryDTO"
          }
        },
        "type": "object",
        "required": [
          "news_type"
        ],
        "title": "News"
      },
      "NewsType": {
        "type": "string",
        "enum": [
          "EVENT",
          "EVENT_ENDED",
          "BLOB_CREATED_AND_NAMED",
          "BLOB_CREATED",
          "SEASON_START",
          "CONTINUE"
        ],
        "title": "NewsType"
      },
      "ParentDto": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "color": {
            "type": "string",
            "title": "Color"
          }
        },
        "type": "object",
        "required": [
          "name",
          "color"
        ],
        "title": "ParentDto"
      },
      "QuarteredEventRecordDto": {
        "properties": {
          "blob": {
            "$ref": "#/components/schemas/BlobCompetitorDto"
          },
          "quarters": {
            "items": {
              "$ref": "#/components/schemas/ScoreDto"
            },
            "type": "array",
            "title": "Quarters"
          },
          "eliminated": {
            "type": "boolean",
            "title": "Eliminated",
            "default": false
          },
          "current": {
            "type": "boolean",
            "title": "Current",
            "default": false
          },
          "next": {
            "type": "boolean",
            "title": "Next",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "blob",
          "quarters"
        ],
        "title": "QuarteredEventRecordDto"
      },
      "RaceEventRecordDto": {
        "properties": {
          "blob": {
            "$ref": "#/components/schemas/BlobCompetitorDto"
          },
          "distance_records": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Distance Records"
          },
          "previous_position": {
            "type": "integer",
            "title": "Previous Position",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "blob",
          "distance_records"
        ],
        "title": "RaceEventRecordDto"
      },
      "ScoreDto": {
        "properties": {
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "best": {
            "type": "boolean",
            "title": "Best",
            "default": false
          },
          "personal_best": {
            "type": "boolean",
            "title": "Personal Best",
            "default": false
          },
          "latest_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Score"
          }
        },
        "type": "object",
        "title": "ScoreDto"
      },
      "SimTimeDto": {
        "properties": {
          "eon": {
            "type": "integer",
            "title": "Eon"
          },
          "season": {
            "type": "integer",
            "title": "Season"
          },
          "epoch": {
            "type": "integer",
            "title": "Epoch"
          },
          "cycle": {
            "type": "integer",
            "title": "Cycle"
          }
        },
        "type": "object",
        "required": [
          "eon",
          "season",
          "epoch",
          "cycle"
        ],
        "title": "SimTimeDto"
      },
      "StandingsDTO": {
        "properties": {
          "blob_id": {
            "type": "integer",
            "title": "Blob Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "is_contract_ending": {
            "type": "boolean",
            "title": "Is Contract Ending"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/StandingsResultDTO"
            },
            "type": "array",
            "title": "Results"
          },
          "num_of_rounds": {
            "type": "integer",
            "title": "Num Of Rounds"
          },
          "total_points": {
            "type": "integer",
            "title": "Total Points"
          }
        },
        "type": "object",
        "required": [
          "blob_id",
          "name",
          "color",
          "is_contract_ending",
          "results",
          "num_of_rounds",
          "total_points"
        ],
        "title": "StandingsDTO"
      },
      "StandingsResultDTO": {
        "properties": {
          "position": {
            "type": "integer",
            "title": "Position"
          },
          "points": {
            "type": "integer",
            "title": "Points"
          }
        },
        "type": "object",
        "required": [
          "position",
          "points"
        ],
        "title": "StandingsResultDTO"
      },
      "Token": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "Token"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "auth/login"
          }
        }
      }
    }
  }
}